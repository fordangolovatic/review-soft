{
	"name": "clickmedicus-api",
	"version": "0.0.1",
	"description": "A NodeJS API using Nest Framewarok for ClickMedicus",
	"author": "Hardik Sheth",
	"private": true,
	"license": "UNLICENSED",
	"scripts": {
		"prebuild": "rimraf dist",
		"build": "nest build",
		"format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
		"start": "nest start",
		"start:dev": "NODE_ENV=development nest start --watch",
		"start:stage": "NODE_ENV=staging nest start --watch",
		"start:debug": "NODE_ENV=development nest start --debug --watch",
		"start:prod": "node dist/main",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "jest --config ./test/jest-e2e.json",
		"compodoc": "npx compodoc -p tsconfig.doc.json --toggleMenuItems ['all']",
		"typeorm:dev": "SET NODE_ENV=development && typeorm-ts-node-commonjs",
		"typeorm:stage": "NODE_ENV=staging && ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js --config src/config/typeorm/ormconfig-cli.ts",
		"typeorm:prod": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js --config src/config/typeorm/ormconfig-cli.ts",
		"migration:dev": "SET NODE_ENV=development&& typeorm-ts-node-commonjs migration:run -d src/config/typeorm/data-source-migration.ts",
		"migration:stage": "npm run typeorm:stage migration:run",
		"migration:prod": "npm run typeorm:prod migration:run",
		"migration:generate-dev": "NODE_ENV=development && typeorm-ts-node-commonjs migration:generate -d src/config/typeorm/data-source-migration.ts src/database/migrations/migration",
		"migration:generate-stage": "npm run typeorm:stage migration:generate -- -d 'src/database/migrations' -n",
		"migration:generate-prod": "npm run typeorm:prod migration:generate -- -d 'src/database/migrations' -n",
		"migration:create": "npm run typeorm migration:create -- -d 'src/database/migrations' -n",
		"migration:revert": "npm run typeorm migration:revert",
		"docker-compose:dev": "docker compose -f docker-compose.dev.yaml -p development --env-file ./.env.development up -d",
		"docker-compose:dev-build": "docker compose --env-file ./.env.development -f ./docker-compose.dev.yaml up --build",
		"docker-compose:stage": "docker compose -f docker-compose.staging.yaml -p staging --env-file ./.env.staging up -d",
		"docker-compose:prod": "docker compose -f docker-compose.aws.yaml -p production --env-file ./.env up -d",
		"docker-compose-down:dev": "docker compose -f docker-compose.dev.yaml -p development down",
		"docker-compose-down:stage": "docker compose -f docker-compose.staging.yaml -p staging down",
		"docker-compose-down:prod": "docker compose -f docker-compose.aws.yaml -p production down",
		"typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
		"typeorm:datasource": "npm run typeorm",
		"db:refresh": "npm run db:schema:drop && npm run db:migration:run",
		"db:schema:drop": "npm run typeorm:datasource schema:drop",
		"db:migration:create": "sh -c 'npm run typeorm migration:create ./src/database/migrations/${1:-empty}' --name",
		"db:migration:generate": "NODE_ENV=development npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d ./src/config/typeorm/data-source-migration.ts migration:generate ./src/database/migrations/migration",
		"db:migration:run": "NODE_ENV=development npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d ./src/config/typeorm/data-source-migration.ts migration:run",
		"db:migration:revert": "NODE_ENV=development npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -d ./src/config/typeorm/data-source-migration.ts migration:revert"
	},
	"lint-staged": {
		"**/*.{js,ts}": [
			"eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
			"prettier --write \"src/**/*.ts\" \"test/**/*.ts\""
		]
	},
	"dependencies": {
		"@liaoliaots/nestjs-redis": "^9.0.3",
		"@nestjs-modules/mailer": "^1.9.1",
		"@nestjs/common": "^9.0.0",
		"@nestjs/config": "^2.2.0",
		"@nestjs/core": "^9.0.0",
		"@nestjs/jwt": "^10.0.1",
		"@nestjs/mapped-types": "^1.2.0",
		"@nestjs/passport": "^9.0.0",
		"@nestjs/platform-express": "^9.0.0",
		"@nestjs/serve-static": "^3.0.0",
		"@nestjs/swagger": "^6.1.3",
		"@nestjs/typeorm": "^9.0.1",
		"@types/passport-facebook": "^2.1.11",
		"bcrypt": "^5.1.0",
		"class-transformer": "^0.5.1",
		"class-validator": "^0.13.2",
		"compression": "^1.7.4",
		"dotenv": "^16.0.3",
		"helmet": "^6.0.0",
		"ioredis": "^5.2.3",
		"moment-timezone": "^0.5.43",
		"mysql2": "^2.3.3",
		"nestjs-i18n": "^10.2.4",
		"nodemailer": "^6.9.4",
		"passport": "^0.6.0",
		"passport-facebook": "^3.0.0",
		"passport-jwt": "^4.0.0",
		"passport-local": "^1.0.0",
		"reflect-metadata": "^0.1.13",
		"rimraf": "^3.0.2",
		"rxjs": "^7.2.0",
		"swagger-ui-express": "^4.5.0",
		"typeorm": "^0.3.12",
		"typescript-transform-paths": "^3.4.4",
		"uuid": "^9.0.0"
	},
	"devDependencies": {
		"@nestjs/cli": "^9.0.0",
		"@nestjs/schematics": "^9.0.0",
		"@nestjs/testing": "^9.0.0",
		"@types/bcrypt": "^5.0.0",
		"@types/express": "^4.17.13",
		"@types/jest": "28.1.8",
		"@types/node": "^16.0.0",
		"@types/nodemailer": "^6.4.9",
		"@types/passport-jwt": "^3.0.7",
		"@types/passport-local": "^1.0.34",
		"@types/supertest": "^2.0.11",
		"@types/uuid": "^8.3.4",
		"@typescript-eslint/eslint-plugin": "^5.0.0",
		"@typescript-eslint/parser": "^5.0.0",
		"eslint": "^8.0.1",
		"eslint-config-prettier": "^8.3.0",
		"eslint-plugin-prettier": "^4.0.0",
		"husky": "^8.0.1",
		"jest": "28.1.3",
		"lint-staged": "^13.0.3",
		"prettier": "^2.3.2",
		"source-map-support": "^0.5.20",
		"supertest": "^6.1.3",
		"ts-jest": "28.0.8",
		"ts-loader": "^9.2.3",
		"ts-node": "^10.9.1",
		"tsconfig-paths": "4.1.0",
		"typescript": "^4.7.4"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node"
	}
}
