import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration1690550698592 implements MigrationInterface {
    name = 'Migration1690550698592'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`message\` (\`message_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`content\` varchar(1000) NULL COMMENT 'Content of the message.', \`subject\` varchar(1000) NULL COMMENT 'Subject of the message.', \`is_read\` tinyint NULL COMMENT 'Is message have read?' DEFAULT 0, \`createdAt\` timestamp NOT NULL COMMENT 'Date and time when the record is created.', \`from\` int NULL COMMENT 'PK of the table.', \`to\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_06a563cdbd963a9f7cbcb25c44\` (\`message_id\`), PRIMARY KEY (\`message_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`country\` (\`country_id\` smallint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`country_name\` varchar(100) NOT NULL COMMENT 'Name of the country.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_220fe368500f103cf873b01f15\` (\`country_id\`), UNIQUE INDEX \`IDX_5397304ae6a7d7a1faa1326789\` (\`country_name\`), PRIMARY KEY (\`country_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`state\` (\`state_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`state_name\` varchar(100) NOT NULL COMMENT 'Name of the state.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_0b9a0389ec8da5d1ca7fce93a8\` (\`state_name\`), UNIQUE INDEX \`IDX_c6c635621335b860a10c0763e7\` (\`state_id\`), PRIMARY KEY (\`state_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`comment\` (\`comment_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`message\` varchar(1000) NULL COMMENT 'message replay to a post ', \`createdDate\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', \`post_id\` bigint NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_6a9f9bf1cf9a09107d3224a0e9\` (\`comment_id\`), PRIMARY KEY (\`comment_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`like\` (\`like_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`createdAt\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', \`post_id\` bigint NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_90999e6c2872ea84c11682a176\` (\`like_id\`), PRIMARY KEY (\`like_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`post\` (\`post_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`content\` varchar(1000) NULL COMMENT 'Content of the media-post.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`image\` varchar(255) NULL COMMENT 'Image of the media-post.', \`video\` varchar(255) NULL COMMENT 'Video of the media-post.', \`user_id\` int NULL COMMENT 'PK of the table.', \`articleArticleId\` bigint NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_4d093caee4d33b2745c7d05a41\` (\`post_id\`), UNIQUE INDEX \`REL_945114492f8f53bf77a223ff2a\` (\`articleArticleId\`), PRIMARY KEY (\`post_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`professional-experience\` (\`professional_experience_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`speciality\` varchar(255) NULL, \`position\` varchar(255) NOT NULL, \`location\` varchar(255) NOT NULL, \`startDate\` varchar(255) NOT NULL COMMENT 'Date and time when the record is created.', \`endDate\` varchar(255) NOT NULL COMMENT 'Date and time when the record is created.', \`isOngoing\` tinyint NOT NULL, \`professional_info_id\` bigint NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_bf7d9a7a80d4c7d22107ee1142\` (\`professional_experience_id\`), PRIMARY KEY (\`professional_experience_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`professional-info\` (\`professional_info_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`experienceInYears\` bigint NOT NULL, \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_4392ac0534a4d77fbf5a388cca\` (\`professional_info_id\`), UNIQUE INDEX \`REL_e0785bde9a4f109a0eb2954885\` (\`user_id\`), PRIMARY KEY (\`professional_info_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`forum_comment\` (\`forum_comment_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`forum_id\` bigint NOT NULL COMMENT 'FK to forum table.', \`commenter_id\` int NOT NULL COMMENT 'FK to user table. A user who commented on the forum.', \`comment_datetime\` datetime NOT NULL COMMENT 'Timestamp of comment.', \`comment\` varchar(5000) NOT NULL COMMENT 'Comment.', \`ref_comment_id\` bigint NULL COMMENT 'Self refrenece to article_comment_id in case of reply to the comment.', \`is_blocked\` tinyint NULL COMMENT 'Comment is blocked or not.', \`reason_for_block\` varchar(500) NULL COMMENT 'Reason of blocking the commnet.', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_07a883b26c5fb1e0152028ed50\` (\`forum_comment_id\`), PRIMARY KEY (\`forum_comment_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`forum\` (\`forum_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`forum_question\` varchar(500) NOT NULL COMMENT 'Question for the forum.', \`description\` varchar(1000) NULL COMMENT 'Description of the question.', \`user_id\` int NOT NULL COMMENT 'The user who have asked the question.', \`language_id\` int NOT NULL COMMENT 'FK to the language table.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`speciality_id\` int NOT NULL COMMENT 'FK to the speciality table.', \`no_of_likes\` int NULL COMMENT 'No of likes on the forum.', \`no_of_comments\` int NULL COMMENT 'No of comments on the forum.', \`no_of_views\` int NULL COMMENT 'No of views on the forum.', UNIQUE INDEX \`IDX_8c304b1f34f006116e6076956b\` (\`forum_id\`), PRIMARY KEY (\`forum_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`account_consultation_price\` (\`account_consultation_price_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PF of the table.', \`consultation_price\` decimal(18,2) NOT NULL COMMENT 'Price of consultation in Portal coin.', \`start_date\` datetime NOT NULL COMMENT 'Date and time from which this price will take effect.', \`end_date\` datetime NULL COMMENT 'Date and time after which this price will no longer effect.', \`language_id\` int NULL COMMENT 'FK to the language table.', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_21a7dfc735d9d8c87ddb908883\` (\`account_consultation_price_id\`), PRIMARY KEY (\`account_consultation_price_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`language\` (\`language_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`language_name\` varchar(50) NOT NULL COMMENT 'Name of the language.', \`short_code\` varchar(10) NOT NULL COMMENT 'Short code for language.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_eb12ddc95083c8ca8e1ba65670\` (\`language_id\`), UNIQUE INDEX \`IDX_c924c4fab78f567a1af3792ba1\` (\`language_name\`), UNIQUE INDEX \`IDX_260f08048d81a998168b911529\` (\`short_code\`), PRIMARY KEY (\`language_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`question\` (\`question_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`title\` varchar(1000) NULL COMMENT 'Title of question', \`content\` varchar(1000) NULL COMMENT 'Content of question', \`image\` varchar(1000) NULL COMMENT 'Image of question', \`isAnonymous\` tinyint NULL COMMENT 'isAnonymous' DEFAULT 1, \`created_at\` datetime NOT NULL COMMENT 'Date and time when the question is published.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', \`speciality_id\` bigint NULL COMMENT 'PK of the table.', \`language_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_7c755ccdc03ae2b6206ff00363\` (\`question_id\`), PRIMARY KEY (\`question_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`speciality\` (\`speciality_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`speciality_name\` varchar(1000) NULL COMMENT 'Speciality name.', \`speciality_image\` varchar(500) NULL COMMENT 'Speciality image path.', \`createdAt\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', \`professional_info_id\` bigint NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_daff734c62d4a1073c00d2291f\` (\`speciality_id\`), PRIMARY KEY (\`speciality_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`medical_record\` (\`medical_record_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`gender\` varchar(255) NULL, \`height\` bigint NOT NULL, \`weight\` bigint NOT NULL, \`operations\` text NULL, \`breaks\` text NULL, \`allergies\` text NULL, \`diseases\` text NULL, \`medicaments\` text NULL, \`isSmoking\` tinyint NULL DEFAULT 0, \`packsPerDay\` bigint NOT NULL, \`yearsOfSmoking\` bigint NOT NULL, \`isDrinking\` tinyint NOT NULL DEFAULT 0, \`drinkingStatus\` enum ('occasionally', 'daily', 'never') NOT NULL DEFAULT 'never', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_351461e19e14c5a479dac7b45d\` (\`medical_record_id\`), UNIQUE INDEX \`REL_a200c73280bf73cdd497d358fb\` (\`user_id\`), PRIMARY KEY (\`medical_record_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`account_availability\` (\`account_availability_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`user_id\` int NOT NULL COMMENT 'FK to account table.', \`available_from\` datetime NOT NULL COMMENT 'Date and time from when Doctors are available.', \`available_to\` datetime NOT NULL COMMENT 'Date and time untill when Doctors are available.', UNIQUE INDEX \`IDX_56c0b0f38fbb4c9861cfe1067d\` (\`account_availability_id\`), PRIMARY KEY (\`account_availability_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`document_type\` (\`document_type_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`account_type_id\` tinyint NOT NULL COMMENT 'FK to the account_type table.', \`document_type_name\` varchar(100) NOT NULL COMMENT 'Name of the document type.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_119db816c073423b2f8a831ed3\` (\`document_type_id\`), PRIMARY KEY (\`document_type_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`account_document\` (\`account_document_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`user_id\` int NOT NULL COMMENT 'FK to account table.', \`document_type_id\` int NOT NULL COMMENT 'FK to the document_type table.', \`document_name\` varchar(5000) NOT NULL COMMENT 'Original name of the document.', \`system_name\` varchar(5000) NOT NULL COMMENT 'System defined name of the document.', \`full_path\` varchar(5000) NOT NULL COMMENT 'Full path to the document.', \`mime_type\` varchar(50) NOT NULL COMMENT 'Mime type', \`size_kb\` int NOT NULL COMMENT 'Size of the document in KB.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_2a4f47edceeb7da5cd7b82bf3e\` (\`account_document_id\`), PRIMARY KEY (\`account_document_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`consultation_price\` (\`consultation_price_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`start_year\` smallint NOT NULL COMMENT 'Start year for doctor''s experience', \`end_year\` smallint NOT NULL COMMENT 'End year for doctor''s experience', \`patient_charges_coins\` decimal(18,2) NOT NULL COMMENT 'Per session charges for patient in coins.', \`doctors_fee\` decimal(18,2) NULL COMMENT 'Per hour payment to doctors in local currency.', \`currency_id\` smallint NOT NULL COMMENT 'FK to the currency table. Currency in which doctor will be paid.', UNIQUE INDEX \`IDX_d02dd5001e1979edb0fdf50391\` (\`consultation_price_id\`), PRIMARY KEY (\`consultation_price_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`wallet_offers_detail\` (\`wallet_offers_detail_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`wallet_offers_id\` int NOT NULL COMMENT 'FK to wallet_offers table.', \`purchase_amount\` decimal(18,2) NOT NULL COMMENT 'Amount of purchase.', \`coins\` decimal(18,2) NOT NULL COMMENT 'No of coins to receive on purchase. For example, 50 coins for 10 EURs and 120 coins for 20 EURs.', UNIQUE INDEX \`IDX_4dd896a575964259002f4841ef\` (\`wallet_offers_detail_id\`), PRIMARY KEY (\`wallet_offers_detail_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`wallet_offers\` (\`wallet_offers_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`wallet_offers_name\` varchar(500) NOT NULL COMMENT 'Name of the offer.', \`currency_id\` smallint NOT NULL COMMENT 'FK to currency table.', \`offer_start_date\` datetime NOT NULL COMMENT 'Offer start date.', \`offer_end_date\` datetime NULL COMMENT 'Offer end date.', UNIQUE INDEX \`IDX_d481e12da09a099655b9727bcd\` (\`wallet_offers_id\`), PRIMARY KEY (\`wallet_offers_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`coin_conversion_rate\` (\`coin_conversion_rate_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`start_date\` datetime NOT NULL COMMENT 'Rate effective from.', \`end_date\` datetime NULL COMMENT 'Rate effective till.', \`currency_id\` smallint NOT NULL COMMENT 'FK to currency table. Source currency like USD, EUR, etc.', \`rate\` decimal(5,2) NOT NULL COMMENT 'Protal coins. Ex. 1 EUR = 5 coins.', UNIQUE INDEX \`IDX_c2a126d73bf3b069428b00292d\` (\`coin_conversion_rate_id\`), PRIMARY KEY (\`coin_conversion_rate_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`currency\` (\`currency_id\` smallint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`currency_name\` varchar(500) NOT NULL COMMENT 'Name of the currency.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_c2ba975da95a6229e16936b256\` (\`currency_id\`), UNIQUE INDEX \`IDX_5a33a125ed9f56b401415f6199\` (\`currency_name\`), PRIMARY KEY (\`currency_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment_mode\` (\`payment_mode_id\` tinyint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`payment_mode_name\` varchar(100) NOT NULL COMMENT 'Name of the payment mode.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_1a3df181c21746ac6bdba12df2\` (\`payment_mode_id\`), PRIMARY KEY (\`payment_mode_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`account_wallet_transaction\` (\`account_wallet_transaction_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`account_wallet_id\` bigint NOT NULL COMMENT 'FK to account_wallet table.', \`transaction_date\` datetime NOT NULL COMMENT 'Date and time of the transaction.', \`payment_mode_id\` tinyint NOT NULL COMMENT 'Mode of payment like credit card, net banking, etc.', \`currency_id\` smallint NOT NULL COMMENT 'Currency like USD, INR, etc.', \`amount\` decimal(18,2) NULL COMMENT 'Amount.', \`coins_cr\` decimal(18,2) NOT NULL COMMENT 'Coins credited equivalant to amont.', \`coins_dr\` decimal(18,2) NOT NULL COMMENT 'Coins debited.', \`wallet_offers_id\` int NULL COMMENT 'FK to wallet_offers table.', UNIQUE INDEX \`IDX_415903b4ba9349fca49ff32288\` (\`account_wallet_transaction_id\`), PRIMARY KEY (\`account_wallet_transaction_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`account_wallet\` (\`account_wallet_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`available_balance\` decimal(18,2) NOT NULL COMMENT 'Available balance in portal''s coin.', \`last_updated\` datetime NOT NULL COMMENT 'Date and time of last balance update.', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_7c867aff7d7de8ae1fb500a559\` (\`account_wallet_id\`), UNIQUE INDEX \`REL_11ad255844c9eeaa5cdbad6dbe\` (\`user_id\`), PRIMARY KEY (\`account_wallet_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`activity_program\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`date\` varchar(5000) NOT NULL COMMENT 'Date of the activity', \`price\` bigint NOT NULL COMMENT 'price of activity', \`slots\` json NOT NULL COMMENT 'listed slots', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_e4157c40b82b6be5e84f166839\` (\`id\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`consultation_outcome_document\` (\`consultation_outcome_document_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`consultation_session_detail_id\` bigint NOT NULL COMMENT 'FK to consultation_session_detail table.', \`document_name\` varchar(5000) NOT NULL COMMENT 'Original name of the document.', \`system_name\` varchar(5000) NOT NULL COMMENT 'System defined name of the document.', \`full_path\` varchar(5000) NOT NULL COMMENT 'Full path to the document.', \`mime_type\` varchar(50) NOT NULL COMMENT 'Mime type', \`size_kb\` int NOT NULL COMMENT 'Size of the document in KB.', UNIQUE INDEX \`IDX_eb4d1e525033626f97606941fc\` (\`consultation_outcome_document_id\`), PRIMARY KEY (\`consultation_outcome_document_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`consultation_outcome\` (\`consultation_outcome_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`consultation_outcom_name\` varchar(200) NOT NULL COMMENT 'Outcome details like Diagnosis, Prescribed treatment, etc.', UNIQUE INDEX \`IDX_41d3393c3c6c0caa367276bdd5\` (\`consultation_outcome_id\`), PRIMARY KEY (\`consultation_outcome_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`consultation_session_detail\` (\`consultation_session_detail_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`consultation_session_id\` bigint NOT NULL COMMENT 'FK to consultation_session table.', \`consultation_outcome_id\` bigint NOT NULL COMMENT 'FK to consultation_outcome table.', \`consultation_outcome\` varchar(1000) NOT NULL COMMENT 'Outcome of the consultation session.', UNIQUE INDEX \`IDX_c88ae0ee5d926ed19a1c148fd7\` (\`consultation_session_detail_id\`), PRIMARY KEY (\`consultation_session_detail_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`interpretation_document\` (\`interpretation_document_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`consultation_session_id\` bigint NOT NULL COMMENT 'PK of the table.', \`document_name\` varchar(5000) NOT NULL COMMENT 'Original name of the document.', \`system_name\` varchar(5000) NOT NULL COMMENT 'System defined name of the document.', \`full_path\` varchar(5000) NOT NULL COMMENT 'Full path to the document.', \`mime_type\` varchar(50) NOT NULL COMMENT 'Mime type', \`size_kb\` int NOT NULL COMMENT 'Size of the document in KB.', UNIQUE INDEX \`IDX_55472b716598d469f6d7d425cc\` (\`interpretation_document_id\`), PRIMARY KEY (\`interpretation_document_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`consultation_session\` (\`consultation_session_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`consultation_status\` varchar(255) NOT NULL COMMENT 'Consultation status' DEFAULT 'pending', \`consultation_price\` decimal(18,2) NOT NULL COMMENT 'Price of the consultation.', \`start_time\` varchar(255) NOT NULL COMMENT 'Start date and time of the consultation.', \`end_time\` varchar(255) NULL COMMENT 'End date and time of the consultation.', \`rating\` decimal(3,2) NULL COMMENT 'Rating from the patient.', \`feedback\` varchar(500) NULL COMMENT 'Feedback from the patient.', \`reason_for_cancellation\` varchar(500) NULL COMMENT 'Reason for the cancellation of the appointment', \`translator_id\` bigint NULL COMMENT 'FK to account table.', \`treatment_plan\` varchar(500) NULL COMMENT 'Treatment Plan of the consultation.', \`comments\` varchar(500) NULL COMMENT 'Comment of the consultation.', \`patient_id\` int NULL COMMENT 'FK to account table.', \`doctor_id\` int NULL COMMENT 'FK to account table.', \`contact\` text NULL, \`translator_consultation_price\` decimal(18,2) NULL COMMENT 'Price of the consultation for translator.', \`is_interpretation\` tinyint NULL COMMENT 'Is interpretation or consultation?', \`activity_id\` bigint NULL COMMENT 'PK of the table.', \`user_cancelled\` int NULL COMMENT 'PK of the table.', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_5cbfa1514993cb95ea8f456101\` (\`consultation_session_id\`), PRIMARY KEY (\`consultation_session_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`favorite_doctor\` (\`favorite_doctor_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', \`user\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_0ea0b54366c84bc7909212f8d1\` (\`favorite_doctor_id\`), PRIMARY KEY (\`favorite_doctor_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`notification\` (\`notification_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`redirect_id\` varchar(255) NOT NULL COMMENT 'redirectId of the notification.', \`title\` varchar(255) NOT NULL COMMENT 'Title of the notification.', \`type\` enum ('message received') NOT NULL COMMENT 'Message received.' DEFAULT 'message received', \`is_read\` tinyint NOT NULL COMMENT 'Notification is read.' DEFAULT 0, \`createdAt\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user\` int NULL COMMENT 'PK of the table.', \`created_by\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_fc4db99eb33f32cea47c5b6a39\` (\`notification_id\`), PRIMARY KEY (\`notification_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`patient_anamnesis_document\` (\`patient_anamnesis_document_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`patient_anamnesis_history_id\` int NOT NULL COMMENT 'FK to patient_anamnesis_history table.', \`document_name\` varchar(5000) NOT NULL COMMENT 'Original name of the document.', \`system_name\` varchar(5000) NOT NULL COMMENT 'System defined name of the document.', \`full_path\` varchar(5000) NOT NULL COMMENT 'Full path to the document.', \`mime_type\` varchar(50) NOT NULL COMMENT 'Mime type', \`size_kb\` int NOT NULL COMMENT 'Size of the document in KB.', UNIQUE INDEX \`IDX_b45d51acf7286a298dc0179106\` (\`patient_anamnesis_document_id\`), PRIMARY KEY (\`patient_anamnesis_document_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`survey_question_group\` (\`survey_question_group_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`survey_question_group_name\` varchar(500) NOT NULL COMMENT 'Name of the survey question group. eg. Body parameters, Smoker, Alcohol, etc.', \`description\` varchar(500) NULL COMMENT 'Description about the group.', \`serial\` int NULL COMMENT 'Serial number for ordering of question groups.', UNIQUE INDEX \`IDX_b645e4c5c7e9165db98a7aa5d6\` (\`survey_question_group_id\`), PRIMARY KEY (\`survey_question_group_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`patient_survey_question\` (\`patient_survey_question_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`survey_question_group_id\` int NULL COMMENT 'FK to the survey_question_group table.', \`question\` varchar(500) NOT NULL COMMENT 'Question', \`is_required\` tinyint NOT NULL COMMENT 'Question is mandatory or not.', \`is_active\` tinyint NULL COMMENT 'Question is active or not', \`ask_document\` tinyint NULL COMMENT 'Show document attachment control', \`serial\` int NULL COMMENT 'Serial number for ordering of questions.', UNIQUE INDEX \`IDX_5fec2f30e57d44d80d68b6f6fe\` (\`patient_survey_question_id\`), PRIMARY KEY (\`patient_survey_question_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`patient_anamnesis_history\` (\`patient_anamnesis_history_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`patient_anamnesis_id\` int NOT NULL COMMENT 'FK to patient_anamnesis table.', \`patient_survey_question_id\` int NOT NULL COMMENT 'FK to patient_survey_question table.', \`answer\` varchar(5000) NOT NULL COMMENT 'Answer of the question.', UNIQUE INDEX \`IDX_f26d8d786f594f83e4f5b7ff14\` (\`patient_anamnesis_history_id\`), PRIMARY KEY (\`patient_anamnesis_history_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`patient_anamnesis\` (\`patient_anamnesis_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`patient_id\` bigint NOT NULL COMMENT 'FK to account table.', \`is_public\` tinyint NULL COMMENT 'Allow doctors to view history.', \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_18f12f3dcd9bd681144ea1a127\` (\`patient_anamnesis_id\`), UNIQUE INDEX \`REL_d8d015e2d286dfe53a6d8e1324\` (\`user_id\`), PRIMARY KEY (\`patient_anamnesis_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`city\` (\`city_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`city_name\` varchar(100) NOT NULL COMMENT 'Name of the city.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_ca073b155c82e749b1a0f3db63\` (\`city_name\`), UNIQUE INDEX \`IDX_bae511dd6a3e9d5a22331fc0fa\` (\`city_id\`), PRIMARY KEY (\`city_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`user\` (\`user_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`firstname\` varchar(100) NOT NULL COMMENT 'First name of the user.', \`lastname\` varchar(100) NOT NULL COMMENT 'Last name of the user.', \`username\` varchar(200) NOT NULL COMMENT 'Username of the user.', \`email\` varchar(200) NOT NULL COMMENT 'Email address of the user.', \`password\` varchar(255) NOT NULL, \`accountType\` varchar(255) NOT NULL COMMENT 'user account type ', \`gender\` char(1) NULL COMMENT 'Gender. M = Male, F = Female, O = Other', \`address\` varchar(500) NULL COMMENT 'Address of the user.', \`isactive\` tinyint NOT NULL COMMENT 'Is active user.', \`isAdmin\` tinyint NULL COMMENT 'Is default role or not.' DEFAULT 0, \`date_of_birth\` date NULL COMMENT 'Date of birth to calculate the age.', \`profileimage\` varchar(500) NULL COMMENT 'Profile image path.', \`createdby\` int NOT NULL COMMENT 'User id of a user who created the record.', \`createddate\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`description\` varchar(255) NULL COMMENT 'Description ', \`city_id\` int NULL COMMENT 'FK to city table.', \`country_id\` smallint NULL COMMENT 'FK to country table.', \`state_id\` int NULL COMMENT 'FK to state table.', \`postal_code\` varchar(10) NULL COMMENT 'Postal code.', \`parent_account_id\` bigint NULL COMMENT 'This will be used only for assistant doctor. It will be doctor''s id who have added the assistant doctor.', \`is_translator\` tinyint NULL COMMENT 'Is the user is translator or not?', \`is_verified\` tinyint NULL COMMENT 'The identity of the doctor is verified / not by the portal.', \`terms_and_condition_accepted\` tinyint NULL COMMENT 'Whether the doctor has accepted the terms and conditions of the portal.', \`modifiedby\` int NULL COMMENT 'User id of a user who modified the record.', \`modifieddate\` datetime NULL COMMENT 'Date and time when the record is modified.', \`issystem\` tinyint NOT NULL COMMENT 'Is generated by the system.', \`isconfirmed\` tinyint NOT NULL COMMENT 'Is confirmed / varified user (email verification).', UNIQUE INDEX \`IDX_758b8ce7c18b9d347461b30228\` (\`user_id\`), UNIQUE INDEX \`IDX_78a916df40e02a9deb1c4b75ed\` (\`username\`), UNIQUE INDEX \`IDX_e12875dfb3b1d92d7d7c5377e2\` (\`email\`), PRIMARY KEY (\`user_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`favorite_article\` (\`favorite_article_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', \`article\` bigint NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_14404db82ded13c6e808aee9e7\` (\`favorite_article_id\`), PRIMARY KEY (\`favorite_article_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`article\` (\`article_id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`title\` varchar(1000) NOT NULL COMMENT 'Title of the article.', \`content\` varchar(1000) NULL COMMENT 'Content of the article.', \`type\` enum ('general', 'medical', 'news') NOT NULL COMMENT 'Type of the article.' DEFAULT 'general', \`articleImage\` varchar(500) NULL COMMENT 'Article image path.', \`createdAt\` datetime NOT NULL COMMENT 'Date and time when the record is created.' DEFAULT CURRENT_TIMESTAMP, \`user_id\` int NULL COMMENT 'PK of the table.', UNIQUE INDEX \`IDX_962ab3ae47140b8d85c11cb84a\` (\`article_id\`), PRIMARY KEY (\`article_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`feature_group\` (\`feature_group_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`feature_group_name\` varchar(100) NOT NULL COMMENT 'Name of the feature group.', \`createdby\` int NOT NULL COMMENT 'User id of a user who created the record.', \`createddate\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modifiedby\` int NULL COMMENT 'User id of a user who modified the record.', \`modifieddate\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_4e543715735568012740d8b1a5\` (\`feature_group_id\`), UNIQUE INDEX \`IDX_a867c6352cbea4809c8654f54c\` (\`feature_group_name\`), PRIMARY KEY (\`feature_group_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`feature\` (\`feature_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`feature_group_id\` int NOT NULL COMMENT 'FK of the table.', \`code\` varchar(50) NOT NULL COMMENT 'Unique code of the feature.', \`feature_name\` varchar(100) NOT NULL COMMENT 'Name of the feature.', \`remarks\` varchar(255) NULL COMMENT 'Name of the feature.', \`featureimage\` varchar(500) NULL COMMENT 'Feature image path.', \`createdby\` int NOT NULL COMMENT 'User id of a user who created the record.', \`createddate\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modifiedby\` int NULL COMMENT 'User id of a user who modified the record.', \`modifieddate\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_1e43309a0b5bc1a46be4662a65\` (\`feature_id\`), UNIQUE INDEX \`IDX_c30465b5a6e0fae1c8ee7e3120\` (\`code\`), UNIQUE INDEX \`IDX_b940d32bce4a451ffd433ab995\` (\`feature_name\`), PRIMARY KEY (\`feature_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`medical_test_type\` (\`medical_test_type_id\` smallint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`medical_test_type_name\` varchar(300) NOT NULL COMMENT 'Name of the medical test.', \`description\` varchar(500) NULL COMMENT 'Description of the medical test.', \`created_by\` int NOT NULL COMMENT 'User id of a user who created the record.', \`created_date\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modified_by\` int NULL COMMENT 'User id of a user who modified the record.', \`modified_date\` datetime NULL COMMENT 'Date and time when the record is modified.', UNIQUE INDEX \`IDX_2148b83396885b8a215ef9ca82\` (\`medical_test_type_id\`), PRIMARY KEY (\`medical_test_type_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`role_feature\` (\`role_feature_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`role_id\` smallint NOT NULL COMMENT 'FK to role table.', \`feature_id\` int NOT NULL COMMENT 'FK to feature table.', \`canCreate\` tinyint NOT NULL COMMENT 'User have permission to create new record or not.', \`canModify\` tinyint NOT NULL COMMENT 'User have permission to modify an existing record or not.', \`canView\` tinyint NOT NULL COMMENT 'User have permission to view records or not.', \`canDelete\` tinyint NOT NULL COMMENT 'User have permission to delete an existing record or not.', \`canManage\` tinyint NOT NULL COMMENT 'User have permission to manage records or not.', UNIQUE INDEX \`IDX_f1b13c6087078d96bb48a7bf6a\` (\`role_feature_id\`), PRIMARY KEY (\`role_feature_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`role\` (\`role_id\` smallint NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`role_name\` varchar(50) NOT NULL COMMENT 'Name of the role.', \`display_name\` varchar(50) NOT NULL COMMENT 'Name to display for the role.', \`createdby\` int NOT NULL COMMENT 'User id of a user who created the record.', \`createddate\` datetime NOT NULL COMMENT 'Date and time when the record is created.', \`modifiedby\` int NULL COMMENT 'User id of a user who modified the record.', \`modifieddate\` datetime NULL COMMENT 'Date and time when the record is modified.', \`issystem\` tinyint NOT NULL COMMENT 'Is generated by the system.', \`is_for_signup\` tinyint NOT NULL COMMENT 'Need to display on signup or not.', \`isDefault\` tinyint NULL COMMENT 'Is default role or not.' DEFAULT 0, \`account_type_id\` tinyint NULL COMMENT 'FK to account_type table.', UNIQUE INDEX \`IDX_df46160e6aa79943b83c81e496\` (\`role_id\`), UNIQUE INDEX \`IDX_4810bc474fe6394c6f58cb7c9e\` (\`role_name\`), PRIMARY KEY (\`role_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`user_session\` (\`user_session_id\` int NOT NULL AUTO_INCREMENT COMMENT 'PK of the table.', \`user_id\` int NOT NULL COMMENT 'FK to user table.', \`session_id\` varchar(500) NULL COMMENT 'Unique session id generate by uuid.', \`refresh_token\` text NULL COMMENT 'Refresh token.', \`expirytime\` bigint NULL COMMENT 'Expiry time of the refresh token.', \`device\` varchar(500) NULL COMMENT 'Device details like manufacturar name, model name etc.', \`operating_system\` varchar(500) NULL COMMENT 'Operating system details like OS name, version etc.', \`browser\` varchar(500) NULL COMMENT 'Browser details like broeser name, version etc.', \`location\` varchar(500) NULL COMMENT 'Location details like latitude, longitude, address details etc.', \`ip_address\` varchar(50) NULL COMMENT 'IP address of the device.', \`loggedin_datetime\` datetime NOT NULL COMMENT 'Logged in date time.', UNIQUE INDEX \`IDX_f53307a84bc385af0550f21aa9\` (\`user_session_id\`), UNIQUE INDEX \`IDX_50c2b6e58a37166dab435111f2\` (\`session_id\`), PRIMARY KEY (\`user_session_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`account_language\` (\`user_id\` int NOT NULL, \`language_id\` int NOT NULL, INDEX \`IDX_b8826caaecd08e8fc7d0b0922c\` (\`user_id\`), INDEX \`IDX_12daa18c948ec7b1548bcc7453\` (\`language_id\`), PRIMARY KEY (\`user_id\`, \`language_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`patient_favorite_doctor\` (\`doctor_id\` int NOT NULL, \`patient_id\` int NOT NULL, INDEX \`IDX_1b0ab278dada664a76de275ea7\` (\`doctor_id\`), INDEX \`IDX_eea98ffc6605c8bcb19042409e\` (\`patient_id\`), PRIMARY KEY (\`doctor_id\`, \`patient_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`article_specialities_speciality\` (\`articleArticleId\` bigint NOT NULL, \`specialitySpecialityId\` bigint NOT NULL, INDEX \`IDX_dfd12a9c98e23b8429973ca674\` (\`articleArticleId\`), INDEX \`IDX_bc71b7bfd817e35657fb805358\` (\`specialitySpecialityId\`), PRIMARY KEY (\`articleArticleId\`, \`specialitySpecialityId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`account_wallet\` CHANGE \`user_id\` \`user_id\` int NOT NULL COMMENT 'FK to account table.'`);
        await queryRunner.query(`ALTER TABLE \`message\` ADD CONSTRAINT \`FK_message_from_user\` FOREIGN KEY (\`from\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`message\` ADD CONSTRAINT \`FK_message_to_user\` FOREIGN KEY (\`to\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`comment\` ADD CONSTRAINT \`FK_comment_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`comment\` ADD CONSTRAINT \`FK_comment_post\` FOREIGN KEY (\`post_id\`) REFERENCES \`post\`(\`post_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`like\` ADD CONSTRAINT \`FK_like_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`like\` ADD CONSTRAINT \`FK_like_post\` FOREIGN KEY (\`post_id\`) REFERENCES \`post\`(\`post_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`post\` ADD CONSTRAINT \`FK_post_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`post\` ADD CONSTRAINT \`FK_945114492f8f53bf77a223ff2a9\` FOREIGN KEY (\`articleArticleId\`) REFERENCES \`article\`(\`article_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`professional-experience\` ADD CONSTRAINT \`FK_professional-info_professionalExperience\` FOREIGN KEY (\`professional_info_id\`) REFERENCES \`professional-info\`(\`professional_info_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`professional-info\` ADD CONSTRAINT \`FK_professional_info_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`forum_comment\` ADD CONSTRAINT \`FK_forum_comment_forum\` FOREIGN KEY (\`forum_id\`) REFERENCES \`forum\`(\`forum_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`forum_comment\` ADD CONSTRAINT \`FK_forum_comment_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`forum\` ADD CONSTRAINT \`FK_forum_language\` FOREIGN KEY (\`language_id\`) REFERENCES \`language\`(\`language_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`forum\` ADD CONSTRAINT \`FK_forum_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_consultation_price\` ADD CONSTRAINT \`FK_account_consultation_price_language\` FOREIGN KEY (\`language_id\`) REFERENCES \`language\`(\`language_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_consultation_price\` ADD CONSTRAINT \`FK_account_consultation_price_account\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`question\` ADD CONSTRAINT \`FK_question_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`question\` ADD CONSTRAINT \`FK_question_speciality\` FOREIGN KEY (\`speciality_id\`) REFERENCES \`speciality\`(\`speciality_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`question\` ADD CONSTRAINT \`FK_question_language\` FOREIGN KEY (\`language_id\`) REFERENCES \`language\`(\`language_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`speciality\` ADD CONSTRAINT \`FK_specialities_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`speciality\` ADD CONSTRAINT \`FK_professional-info_specialities\` FOREIGN KEY (\`professional_info_id\`) REFERENCES \`professional-info\`(\`professional_info_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`medical_record\` ADD CONSTRAINT \`FK_medical_record_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_availability\` ADD CONSTRAINT \`FK_account_availability_account\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_document\` ADD CONSTRAINT \`FK_account_document_document_type\` FOREIGN KEY (\`document_type_id\`) REFERENCES \`document_type\`(\`document_type_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_document\` ADD CONSTRAINT \`FK_account_document_account\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_price\` ADD CONSTRAINT \`FK_consultation_price_currency\` FOREIGN KEY (\`currency_id\`) REFERENCES \`currency\`(\`currency_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`wallet_offers_detail\` ADD CONSTRAINT \`FK_wallet_offers_detail_wallet_offers\` FOREIGN KEY (\`wallet_offers_id\`) REFERENCES \`wallet_offers\`(\`wallet_offers_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`wallet_offers\` ADD CONSTRAINT \`FK_wallet_offers_currency\` FOREIGN KEY (\`currency_id\`) REFERENCES \`currency\`(\`currency_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`coin_conversion_rate\` ADD CONSTRAINT \`FK_coin_conversion_rate_currency\` FOREIGN KEY (\`currency_id\`) REFERENCES \`currency\`(\`currency_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` ADD CONSTRAINT \`FK_account_wallet_transaction_account_wallet\` FOREIGN KEY (\`account_wallet_id\`) REFERENCES \`account_wallet\`(\`account_wallet_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` ADD CONSTRAINT \`FK_account_wallet_transaction_currency\` FOREIGN KEY (\`currency_id\`) REFERENCES \`currency\`(\`currency_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` ADD CONSTRAINT \`FK_account_wallet_transaction_payment_mode\` FOREIGN KEY (\`payment_mode_id\`) REFERENCES \`payment_mode\`(\`payment_mode_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` ADD CONSTRAINT \`FK_account_wallet_transaction_wallet_offers\` FOREIGN KEY (\`wallet_offers_id\`) REFERENCES \`wallet_offers\`(\`wallet_offers_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_wallet\` ADD CONSTRAINT \`FK_account_wallet_account\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`activity_program\` ADD CONSTRAINT \`FK_activity_program_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_outcome_document\` ADD CONSTRAINT \`FK_consultation_outcome_document_consultation_session_detail\` FOREIGN KEY (\`consultation_session_detail_id\`) REFERENCES \`consultation_session_detail\`(\`consultation_session_detail_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session_detail\` ADD CONSTRAINT \`FK_consultation_session_detail_consultation_session\` FOREIGN KEY (\`consultation_session_id\`) REFERENCES \`consultation_session\`(\`consultation_session_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session_detail\` ADD CONSTRAINT \`FK_consultation_session_detail_consultation_outcome\` FOREIGN KEY (\`consultation_outcome_id\`) REFERENCES \`consultation_outcome\`(\`consultation_outcome_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`interpretation_document\` ADD CONSTRAINT \`FK_interpretation_document_consultation_session\` FOREIGN KEY (\`consultation_session_id\`) REFERENCES \`consultation_session\`(\`consultation_session_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` ADD CONSTRAINT \`FK_1ca2e7b4e9f82787586ade2f911\` FOREIGN KEY (\`activity_id\`) REFERENCES \`activity_program\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` ADD CONSTRAINT \`FK_consultation_patient_user\` FOREIGN KEY (\`patient_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` ADD CONSTRAINT \`FK_consultation_doctor_user\` FOREIGN KEY (\`doctor_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` ADD CONSTRAINT \`FK_consultation_cancelled_user\` FOREIGN KEY (\`user_cancelled\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` ADD CONSTRAINT \`FK_consultation_session_account2\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`favorite_doctor\` ADD CONSTRAINT \`FK_favorite_doctor_created_by\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`favorite_doctor\` ADD CONSTRAINT \`FK_favorite_doctor_user\` FOREIGN KEY (\`user\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notification\` ADD CONSTRAINT \`FK_notification_user\` FOREIGN KEY (\`user\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notification\` ADD CONSTRAINT \`FK_notification_created_by\` FOREIGN KEY (\`created_by\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis_document\` ADD CONSTRAINT \`FK_patient_anamnesis_document_patient_anamnesis_history\` FOREIGN KEY (\`patient_anamnesis_history_id\`) REFERENCES \`patient_anamnesis_history\`(\`patient_anamnesis_history_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`patient_survey_question\` ADD CONSTRAINT \`FK_patient_survey_question_survey_question_group\` FOREIGN KEY (\`survey_question_group_id\`) REFERENCES \`survey_question_group\`(\`survey_question_group_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis_history\` ADD CONSTRAINT \`FK_patient_anamnesis_history_patient_anamnesis\` FOREIGN KEY (\`patient_anamnesis_id\`) REFERENCES \`patient_anamnesis\`(\`patient_anamnesis_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis_history\` ADD CONSTRAINT \`FK_patient_anamnesis_history_patient_survey_question\` FOREIGN KEY (\`patient_survey_question_id\`) REFERENCES \`patient_survey_question\`(\`patient_survey_question_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis\` ADD CONSTRAINT \`FK_patient_anamnesis_account\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD CONSTRAINT \`FK_account_city\` FOREIGN KEY (\`city_id\`) REFERENCES \`city\`(\`city_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD CONSTRAINT \`FK_account_state\` FOREIGN KEY (\`state_id\`) REFERENCES \`state\`(\`state_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD CONSTRAINT \`FK_account_country\` FOREIGN KEY (\`country_id\`) REFERENCES \`country\`(\`country_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`favorite_article\` ADD CONSTRAINT \`FK_favorite_article_created_by\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`favorite_article\` ADD CONSTRAINT \`FK_favorite_article\` FOREIGN KEY (\`article\`) REFERENCES \`article\`(\`article_id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`article\` ADD CONSTRAINT \`FK_article_user\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`account_language\` ADD CONSTRAINT \`FK_account_language_account\` FOREIGN KEY (\`user_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`account_language\` ADD CONSTRAINT \`FK_account_language_language\` FOREIGN KEY (\`language_id\`) REFERENCES \`language\`(\`language_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`patient_favorite_doctor\` ADD CONSTRAINT \`FK_patient_favorite_doctor_account1\` FOREIGN KEY (\`doctor_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`patient_favorite_doctor\` ADD CONSTRAINT \`FK_patient_favorite_doctor_account\` FOREIGN KEY (\`patient_id\`) REFERENCES \`user\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`article_specialities_speciality\` ADD CONSTRAINT \`FK_dfd12a9c98e23b8429973ca674e\` FOREIGN KEY (\`articleArticleId\`) REFERENCES \`article\`(\`article_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`article_specialities_speciality\` ADD CONSTRAINT \`FK_bc71b7bfd817e35657fb805358d\` FOREIGN KEY (\`specialitySpecialityId\`) REFERENCES \`speciality\`(\`speciality_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`article_specialities_speciality\` DROP FOREIGN KEY \`FK_bc71b7bfd817e35657fb805358d\``);
        await queryRunner.query(`ALTER TABLE \`article_specialities_speciality\` DROP FOREIGN KEY \`FK_dfd12a9c98e23b8429973ca674e\``);
        await queryRunner.query(`ALTER TABLE \`patient_favorite_doctor\` DROP FOREIGN KEY \`FK_patient_favorite_doctor_account\``);
        await queryRunner.query(`ALTER TABLE \`patient_favorite_doctor\` DROP FOREIGN KEY \`FK_patient_favorite_doctor_account1\``);
        await queryRunner.query(`ALTER TABLE \`account_language\` DROP FOREIGN KEY \`FK_account_language_language\``);
        await queryRunner.query(`ALTER TABLE \`account_language\` DROP FOREIGN KEY \`FK_account_language_account\``);
        await queryRunner.query(`ALTER TABLE \`article\` DROP FOREIGN KEY \`FK_article_user\``);
        await queryRunner.query(`ALTER TABLE \`favorite_article\` DROP FOREIGN KEY \`FK_favorite_article\``);
        await queryRunner.query(`ALTER TABLE \`favorite_article\` DROP FOREIGN KEY \`FK_favorite_article_created_by\``);
        await queryRunner.query(`ALTER TABLE \`user\` DROP FOREIGN KEY \`FK_account_country\``);
        await queryRunner.query(`ALTER TABLE \`user\` DROP FOREIGN KEY \`FK_account_state\``);
        await queryRunner.query(`ALTER TABLE \`user\` DROP FOREIGN KEY \`FK_account_city\``);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis\` DROP FOREIGN KEY \`FK_patient_anamnesis_account\``);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis_history\` DROP FOREIGN KEY \`FK_patient_anamnesis_history_patient_survey_question\``);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis_history\` DROP FOREIGN KEY \`FK_patient_anamnesis_history_patient_anamnesis\``);
        await queryRunner.query(`ALTER TABLE \`patient_survey_question\` DROP FOREIGN KEY \`FK_patient_survey_question_survey_question_group\``);
        await queryRunner.query(`ALTER TABLE \`patient_anamnesis_document\` DROP FOREIGN KEY \`FK_patient_anamnesis_document_patient_anamnesis_history\``);
        await queryRunner.query(`ALTER TABLE \`notification\` DROP FOREIGN KEY \`FK_notification_created_by\``);
        await queryRunner.query(`ALTER TABLE \`notification\` DROP FOREIGN KEY \`FK_notification_user\``);
        await queryRunner.query(`ALTER TABLE \`favorite_doctor\` DROP FOREIGN KEY \`FK_favorite_doctor_user\``);
        await queryRunner.query(`ALTER TABLE \`favorite_doctor\` DROP FOREIGN KEY \`FK_favorite_doctor_created_by\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` DROP FOREIGN KEY \`FK_consultation_session_account2\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` DROP FOREIGN KEY \`FK_consultation_cancelled_user\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` DROP FOREIGN KEY \`FK_consultation_doctor_user\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` DROP FOREIGN KEY \`FK_consultation_patient_user\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session\` DROP FOREIGN KEY \`FK_1ca2e7b4e9f82787586ade2f911\``);
        await queryRunner.query(`ALTER TABLE \`interpretation_document\` DROP FOREIGN KEY \`FK_interpretation_document_consultation_session\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session_detail\` DROP FOREIGN KEY \`FK_consultation_session_detail_consultation_outcome\``);
        await queryRunner.query(`ALTER TABLE \`consultation_session_detail\` DROP FOREIGN KEY \`FK_consultation_session_detail_consultation_session\``);
        await queryRunner.query(`ALTER TABLE \`consultation_outcome_document\` DROP FOREIGN KEY \`FK_consultation_outcome_document_consultation_session_detail\``);
        await queryRunner.query(`ALTER TABLE \`activity_program\` DROP FOREIGN KEY \`FK_activity_program_user\``);
        await queryRunner.query(`ALTER TABLE \`account_wallet\` DROP FOREIGN KEY \`FK_account_wallet_account\``);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` DROP FOREIGN KEY \`FK_account_wallet_transaction_wallet_offers\``);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` DROP FOREIGN KEY \`FK_account_wallet_transaction_payment_mode\``);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` DROP FOREIGN KEY \`FK_account_wallet_transaction_currency\``);
        await queryRunner.query(`ALTER TABLE \`account_wallet_transaction\` DROP FOREIGN KEY \`FK_account_wallet_transaction_account_wallet\``);
        await queryRunner.query(`ALTER TABLE \`coin_conversion_rate\` DROP FOREIGN KEY \`FK_coin_conversion_rate_currency\``);
        await queryRunner.query(`ALTER TABLE \`wallet_offers\` DROP FOREIGN KEY \`FK_wallet_offers_currency\``);
        await queryRunner.query(`ALTER TABLE \`wallet_offers_detail\` DROP FOREIGN KEY \`FK_wallet_offers_detail_wallet_offers\``);
        await queryRunner.query(`ALTER TABLE \`consultation_price\` DROP FOREIGN KEY \`FK_consultation_price_currency\``);
        await queryRunner.query(`ALTER TABLE \`account_document\` DROP FOREIGN KEY \`FK_account_document_account\``);
        await queryRunner.query(`ALTER TABLE \`account_document\` DROP FOREIGN KEY \`FK_account_document_document_type\``);
        await queryRunner.query(`ALTER TABLE \`account_availability\` DROP FOREIGN KEY \`FK_account_availability_account\``);
        await queryRunner.query(`ALTER TABLE \`medical_record\` DROP FOREIGN KEY \`FK_medical_record_user\``);
        await queryRunner.query(`ALTER TABLE \`speciality\` DROP FOREIGN KEY \`FK_professional-info_specialities\``);
        await queryRunner.query(`ALTER TABLE \`speciality\` DROP FOREIGN KEY \`FK_specialities_user\``);
        await queryRunner.query(`ALTER TABLE \`question\` DROP FOREIGN KEY \`FK_question_language\``);
        await queryRunner.query(`ALTER TABLE \`question\` DROP FOREIGN KEY \`FK_question_speciality\``);
        await queryRunner.query(`ALTER TABLE \`question\` DROP FOREIGN KEY \`FK_question_user\``);
        await queryRunner.query(`ALTER TABLE \`account_consultation_price\` DROP FOREIGN KEY \`FK_account_consultation_price_account\``);
        await queryRunner.query(`ALTER TABLE \`account_consultation_price\` DROP FOREIGN KEY \`FK_account_consultation_price_language\``);
        await queryRunner.query(`ALTER TABLE \`forum\` DROP FOREIGN KEY \`FK_forum_user\``);
        await queryRunner.query(`ALTER TABLE \`forum\` DROP FOREIGN KEY \`FK_forum_language\``);
        await queryRunner.query(`ALTER TABLE \`forum_comment\` DROP FOREIGN KEY \`FK_forum_comment_user\``);
        await queryRunner.query(`ALTER TABLE \`forum_comment\` DROP FOREIGN KEY \`FK_forum_comment_forum\``);
        await queryRunner.query(`ALTER TABLE \`professional-info\` DROP FOREIGN KEY \`FK_professional_info_user\``);
        await queryRunner.query(`ALTER TABLE \`professional-experience\` DROP FOREIGN KEY \`FK_professional-info_professionalExperience\``);
        await queryRunner.query(`ALTER TABLE \`post\` DROP FOREIGN KEY \`FK_945114492f8f53bf77a223ff2a9\``);
        await queryRunner.query(`ALTER TABLE \`post\` DROP FOREIGN KEY \`FK_post_user\``);
        await queryRunner.query(`ALTER TABLE \`like\` DROP FOREIGN KEY \`FK_like_post\``);
        await queryRunner.query(`ALTER TABLE \`like\` DROP FOREIGN KEY \`FK_like_user\``);
        await queryRunner.query(`ALTER TABLE \`comment\` DROP FOREIGN KEY \`FK_comment_post\``);
        await queryRunner.query(`ALTER TABLE \`comment\` DROP FOREIGN KEY \`FK_comment_user\``);
        await queryRunner.query(`ALTER TABLE \`message\` DROP FOREIGN KEY \`FK_message_to_user\``);
        await queryRunner.query(`ALTER TABLE \`message\` DROP FOREIGN KEY \`FK_message_from_user\``);
        await queryRunner.query(`ALTER TABLE \`account_wallet\` CHANGE \`user_id\` \`user_id\` int NULL COMMENT 'PK of the table.'`);
        await queryRunner.query(`DROP INDEX \`IDX_bc71b7bfd817e35657fb805358\` ON \`article_specialities_speciality\``);
        await queryRunner.query(`DROP INDEX \`IDX_dfd12a9c98e23b8429973ca674\` ON \`article_specialities_speciality\``);
        await queryRunner.query(`DROP TABLE \`article_specialities_speciality\``);
        await queryRunner.query(`DROP INDEX \`IDX_eea98ffc6605c8bcb19042409e\` ON \`patient_favorite_doctor\``);
        await queryRunner.query(`DROP INDEX \`IDX_1b0ab278dada664a76de275ea7\` ON \`patient_favorite_doctor\``);
        await queryRunner.query(`DROP TABLE \`patient_favorite_doctor\``);
        await queryRunner.query(`DROP INDEX \`IDX_12daa18c948ec7b1548bcc7453\` ON \`account_language\``);
        await queryRunner.query(`DROP INDEX \`IDX_b8826caaecd08e8fc7d0b0922c\` ON \`account_language\``);
        await queryRunner.query(`DROP TABLE \`account_language\``);
        await queryRunner.query(`DROP INDEX \`IDX_50c2b6e58a37166dab435111f2\` ON \`user_session\``);
        await queryRunner.query(`DROP INDEX \`IDX_f53307a84bc385af0550f21aa9\` ON \`user_session\``);
        await queryRunner.query(`DROP TABLE \`user_session\``);
        await queryRunner.query(`DROP INDEX \`IDX_4810bc474fe6394c6f58cb7c9e\` ON \`role\``);
        await queryRunner.query(`DROP INDEX \`IDX_df46160e6aa79943b83c81e496\` ON \`role\``);
        await queryRunner.query(`DROP TABLE \`role\``);
        await queryRunner.query(`DROP INDEX \`IDX_f1b13c6087078d96bb48a7bf6a\` ON \`role_feature\``);
        await queryRunner.query(`DROP TABLE \`role_feature\``);
        await queryRunner.query(`DROP INDEX \`IDX_2148b83396885b8a215ef9ca82\` ON \`medical_test_type\``);
        await queryRunner.query(`DROP TABLE \`medical_test_type\``);
        await queryRunner.query(`DROP INDEX \`IDX_b940d32bce4a451ffd433ab995\` ON \`feature\``);
        await queryRunner.query(`DROP INDEX \`IDX_c30465b5a6e0fae1c8ee7e3120\` ON \`feature\``);
        await queryRunner.query(`DROP INDEX \`IDX_1e43309a0b5bc1a46be4662a65\` ON \`feature\``);
        await queryRunner.query(`DROP TABLE \`feature\``);
        await queryRunner.query(`DROP INDEX \`IDX_a867c6352cbea4809c8654f54c\` ON \`feature_group\``);
        await queryRunner.query(`DROP INDEX \`IDX_4e543715735568012740d8b1a5\` ON \`feature_group\``);
        await queryRunner.query(`DROP TABLE \`feature_group\``);
        await queryRunner.query(`DROP INDEX \`IDX_962ab3ae47140b8d85c11cb84a\` ON \`article\``);
        await queryRunner.query(`DROP TABLE \`article\``);
        await queryRunner.query(`DROP INDEX \`IDX_14404db82ded13c6e808aee9e7\` ON \`favorite_article\``);
        await queryRunner.query(`DROP TABLE \`favorite_article\``);
        await queryRunner.query(`DROP INDEX \`IDX_e12875dfb3b1d92d7d7c5377e2\` ON \`user\``);
        await queryRunner.query(`DROP INDEX \`IDX_78a916df40e02a9deb1c4b75ed\` ON \`user\``);
        await queryRunner.query(`DROP INDEX \`IDX_758b8ce7c18b9d347461b30228\` ON \`user\``);
        await queryRunner.query(`DROP TABLE \`user\``);
        await queryRunner.query(`DROP INDEX \`IDX_bae511dd6a3e9d5a22331fc0fa\` ON \`city\``);
        await queryRunner.query(`DROP INDEX \`IDX_ca073b155c82e749b1a0f3db63\` ON \`city\``);
        await queryRunner.query(`DROP TABLE \`city\``);
        await queryRunner.query(`DROP INDEX \`REL_d8d015e2d286dfe53a6d8e1324\` ON \`patient_anamnesis\``);
        await queryRunner.query(`DROP INDEX \`IDX_18f12f3dcd9bd681144ea1a127\` ON \`patient_anamnesis\``);
        await queryRunner.query(`DROP TABLE \`patient_anamnesis\``);
        await queryRunner.query(`DROP INDEX \`IDX_f26d8d786f594f83e4f5b7ff14\` ON \`patient_anamnesis_history\``);
        await queryRunner.query(`DROP TABLE \`patient_anamnesis_history\``);
        await queryRunner.query(`DROP INDEX \`IDX_5fec2f30e57d44d80d68b6f6fe\` ON \`patient_survey_question\``);
        await queryRunner.query(`DROP TABLE \`patient_survey_question\``);
        await queryRunner.query(`DROP INDEX \`IDX_b645e4c5c7e9165db98a7aa5d6\` ON \`survey_question_group\``);
        await queryRunner.query(`DROP TABLE \`survey_question_group\``);
        await queryRunner.query(`DROP INDEX \`IDX_b45d51acf7286a298dc0179106\` ON \`patient_anamnesis_document\``);
        await queryRunner.query(`DROP TABLE \`patient_anamnesis_document\``);
        await queryRunner.query(`DROP INDEX \`IDX_fc4db99eb33f32cea47c5b6a39\` ON \`notification\``);
        await queryRunner.query(`DROP TABLE \`notification\``);
        await queryRunner.query(`DROP INDEX \`IDX_0ea0b54366c84bc7909212f8d1\` ON \`favorite_doctor\``);
        await queryRunner.query(`DROP TABLE \`favorite_doctor\``);
        await queryRunner.query(`DROP INDEX \`IDX_5cbfa1514993cb95ea8f456101\` ON \`consultation_session\``);
        await queryRunner.query(`DROP TABLE \`consultation_session\``);
        await queryRunner.query(`DROP INDEX \`IDX_55472b716598d469f6d7d425cc\` ON \`interpretation_document\``);
        await queryRunner.query(`DROP TABLE \`interpretation_document\``);
        await queryRunner.query(`DROP INDEX \`IDX_c88ae0ee5d926ed19a1c148fd7\` ON \`consultation_session_detail\``);
        await queryRunner.query(`DROP TABLE \`consultation_session_detail\``);
        await queryRunner.query(`DROP INDEX \`IDX_41d3393c3c6c0caa367276bdd5\` ON \`consultation_outcome\``);
        await queryRunner.query(`DROP TABLE \`consultation_outcome\``);
        await queryRunner.query(`DROP INDEX \`IDX_eb4d1e525033626f97606941fc\` ON \`consultation_outcome_document\``);
        await queryRunner.query(`DROP TABLE \`consultation_outcome_document\``);
        await queryRunner.query(`DROP INDEX \`IDX_e4157c40b82b6be5e84f166839\` ON \`activity_program\``);
        await queryRunner.query(`DROP TABLE \`activity_program\``);
        await queryRunner.query(`DROP INDEX \`REL_11ad255844c9eeaa5cdbad6dbe\` ON \`account_wallet\``);
        await queryRunner.query(`DROP INDEX \`IDX_7c867aff7d7de8ae1fb500a559\` ON \`account_wallet\``);
        await queryRunner.query(`DROP TABLE \`account_wallet\``);
        await queryRunner.query(`DROP INDEX \`IDX_415903b4ba9349fca49ff32288\` ON \`account_wallet_transaction\``);
        await queryRunner.query(`DROP TABLE \`account_wallet_transaction\``);
        await queryRunner.query(`DROP INDEX \`IDX_1a3df181c21746ac6bdba12df2\` ON \`payment_mode\``);
        await queryRunner.query(`DROP TABLE \`payment_mode\``);
        await queryRunner.query(`DROP INDEX \`IDX_5a33a125ed9f56b401415f6199\` ON \`currency\``);
        await queryRunner.query(`DROP INDEX \`IDX_c2ba975da95a6229e16936b256\` ON \`currency\``);
        await queryRunner.query(`DROP TABLE \`currency\``);
        await queryRunner.query(`DROP INDEX \`IDX_c2a126d73bf3b069428b00292d\` ON \`coin_conversion_rate\``);
        await queryRunner.query(`DROP TABLE \`coin_conversion_rate\``);
        await queryRunner.query(`DROP INDEX \`IDX_d481e12da09a099655b9727bcd\` ON \`wallet_offers\``);
        await queryRunner.query(`DROP TABLE \`wallet_offers\``);
        await queryRunner.query(`DROP INDEX \`IDX_4dd896a575964259002f4841ef\` ON \`wallet_offers_detail\``);
        await queryRunner.query(`DROP TABLE \`wallet_offers_detail\``);
        await queryRunner.query(`DROP INDEX \`IDX_d02dd5001e1979edb0fdf50391\` ON \`consultation_price\``);
        await queryRunner.query(`DROP TABLE \`consultation_price\``);
        await queryRunner.query(`DROP INDEX \`IDX_2a4f47edceeb7da5cd7b82bf3e\` ON \`account_document\``);
        await queryRunner.query(`DROP TABLE \`account_document\``);
        await queryRunner.query(`DROP INDEX \`IDX_119db816c073423b2f8a831ed3\` ON \`document_type\``);
        await queryRunner.query(`DROP TABLE \`document_type\``);
        await queryRunner.query(`DROP INDEX \`IDX_56c0b0f38fbb4c9861cfe1067d\` ON \`account_availability\``);
        await queryRunner.query(`DROP TABLE \`account_availability\``);
        await queryRunner.query(`DROP INDEX \`REL_a200c73280bf73cdd497d358fb\` ON \`medical_record\``);
        await queryRunner.query(`DROP INDEX \`IDX_351461e19e14c5a479dac7b45d\` ON \`medical_record\``);
        await queryRunner.query(`DROP TABLE \`medical_record\``);
        await queryRunner.query(`DROP INDEX \`IDX_daff734c62d4a1073c00d2291f\` ON \`speciality\``);
        await queryRunner.query(`DROP TABLE \`speciality\``);
        await queryRunner.query(`DROP INDEX \`IDX_7c755ccdc03ae2b6206ff00363\` ON \`question\``);
        await queryRunner.query(`DROP TABLE \`question\``);
        await queryRunner.query(`DROP INDEX \`IDX_260f08048d81a998168b911529\` ON \`language\``);
        await queryRunner.query(`DROP INDEX \`IDX_c924c4fab78f567a1af3792ba1\` ON \`language\``);
        await queryRunner.query(`DROP INDEX \`IDX_eb12ddc95083c8ca8e1ba65670\` ON \`language\``);
        await queryRunner.query(`DROP TABLE \`language\``);
        await queryRunner.query(`DROP INDEX \`IDX_21a7dfc735d9d8c87ddb908883\` ON \`account_consultation_price\``);
        await queryRunner.query(`DROP TABLE \`account_consultation_price\``);
        await queryRunner.query(`DROP INDEX \`IDX_8c304b1f34f006116e6076956b\` ON \`forum\``);
        await queryRunner.query(`DROP TABLE \`forum\``);
        await queryRunner.query(`DROP INDEX \`IDX_07a883b26c5fb1e0152028ed50\` ON \`forum_comment\``);
        await queryRunner.query(`DROP TABLE \`forum_comment\``);
        await queryRunner.query(`DROP INDEX \`REL_e0785bde9a4f109a0eb2954885\` ON \`professional-info\``);
        await queryRunner.query(`DROP INDEX \`IDX_4392ac0534a4d77fbf5a388cca\` ON \`professional-info\``);
        await queryRunner.query(`DROP TABLE \`professional-info\``);
        await queryRunner.query(`DROP INDEX \`IDX_bf7d9a7a80d4c7d22107ee1142\` ON \`professional-experience\``);
        await queryRunner.query(`DROP TABLE \`professional-experience\``);
        await queryRunner.query(`DROP INDEX \`REL_945114492f8f53bf77a223ff2a\` ON \`post\``);
        await queryRunner.query(`DROP INDEX \`IDX_4d093caee4d33b2745c7d05a41\` ON \`post\``);
        await queryRunner.query(`DROP TABLE \`post\``);
        await queryRunner.query(`DROP INDEX \`IDX_90999e6c2872ea84c11682a176\` ON \`like\``);
        await queryRunner.query(`DROP TABLE \`like\``);
        await queryRunner.query(`DROP INDEX \`IDX_6a9f9bf1cf9a09107d3224a0e9\` ON \`comment\``);
        await queryRunner.query(`DROP TABLE \`comment\``);
        await queryRunner.query(`DROP INDEX \`IDX_c6c635621335b860a10c0763e7\` ON \`state\``);
        await queryRunner.query(`DROP INDEX \`IDX_0b9a0389ec8da5d1ca7fce93a8\` ON \`state\``);
        await queryRunner.query(`DROP TABLE \`state\``);
        await queryRunner.query(`DROP INDEX \`IDX_5397304ae6a7d7a1faa1326789\` ON \`country\``);
        await queryRunner.query(`DROP INDEX \`IDX_220fe368500f103cf873b01f15\` ON \`country\``);
        await queryRunner.query(`DROP TABLE \`country\``);
        await queryRunner.query(`DROP INDEX \`IDX_06a563cdbd963a9f7cbcb25c44\` ON \`message\``);
        await queryRunner.query(`DROP TABLE \`message\``);
    }

}
